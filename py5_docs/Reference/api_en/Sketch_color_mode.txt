@@ meta
name = color_mode()
category = Color
subcategory = Setting
type = method
processing_name = colorMode

@@ description
Changes the way Processing interprets color data. By default, the parameters for ``fill()``, ``stroke()``, ``background()``, and ``color()`` are defined by values between 0 and 255 using the RGB color model. The ``color_mode()`` function is used to change the numerical range used for specifying colors and to switch color systems. For example, calling ``color_mode(RGB, 1.0)`` will specify that values are specified between 0 and 1. The limits for defining colors are altered by setting the parameters ``max``, ``max1``, ``max2``, ``max3``, and ``max_a``.

After changing the range of values for colors with code like ``color_mode(HSB, 360, 100, 100)``, those ranges remain in use until they are explicitly changed again. For example, after running ``color_mode(HSB, 360, 100, 100)`` and then changing back to ``color_mode(RGB)``, the range for R will be 0 to 360 and the range for G and B will be 0 to 100. To avoid this, be explicit about the ranges when changing the color mode. For instance, instead of ``color_mode(RGB)``, write ``color_mode(RGB, 255, 255, 255)``.

@@ example
image = Sketch_color_mode_0.png

no_stroke()
color_mode(RGB, 100)
for i in range(0, 100):
    for j in range(0, 100):
        stroke(i, j, 0)
        point(i, j)


@@ example
image = Sketch_color_mode_1.png

no_stroke()
color_mode(HSB, 100)
for i in range(0, 100):
    for j in range(0, 100):
        stroke(i, j, 100)
        point(i, j)


@@ example
image = Sketch_color_mode_2.png

# if the color is defined here, it won't be
# affected by the color_mode() in setup().
# instead, just declare the variable here and
# assign the value after the color_mode() in setup()
# color bg = color(180, 50, 50)  # no
color bg  # yes, but assign it in setup()


def setup():
    size(100, 100)
    color_mode(HSB, 360, 100, 100)
    bg = color(180, 50, 50)


def draw():
    background(bg)

