@@ meta
name = color_mode()
category = Color
subcategory = Setting
type = None
processing_name = colorMode

@@ description
Changes the way Processing interprets color data. By default, the parameters for ``fill()``, ``stroke()``, ``background()``, and ``color()`` are defined by values between 0 and 255 using the RGB color model. The ``color_mode()`` function is used to change the numerical range used for specifying colors and to switch color systems. For example, calling ``color_mode(rgb, 1.0)`` will specify that values are specified between 0 and 1. The limits for defining colors are altered by setting the parameters ``max``, ``max1``, ``max2``, ``max3``, and ``max_a``.

After changing the range of values for colors with code like ``color_mode(hsb, 360, 100, 100)``, those ranges remain in use until they are explicitly changed again. For example, after running ``color_mode(hsb, 360, 100, 100)`` and then changing back to ``color_mode(rgb)``, the range for R will be 0 to 360 and the range for G and B will be 0 to 100. To avoid this, be explicit about the ranges when changing the color mode. For instance, instead of ``color_mode(rgb)``, write ``color_mode(rgb, 255, 255, 255)``.

@@ example
image = colorMode_0.png

noStroke()
colorMode(RGB, 100)
for (int i = 0 i < 100 i++) {
  for (int j = 0 j < 100 j++) {
    stroke(i, j, 0)
    point(i, j)
  }
}

@@ example
image = colorMode_1.png

noStroke()
colorMode(HSB, 100)
for (int i = 0 i < 100 i++) {
  for (int j = 0 j < 100 j++) {
    stroke(i, j, 100)
    point(i, j)
  }
}

@@ example
image = colorMode_2.png

# If the color is defined here, it won't be 
# affected by the colorMode() in setup(). 
# Instead, just declare the variable here and 
# assign the value after the colorMode() in setup()
#color bg = color(180, 50, 50)  # No
color bg  # Yes, but assign it in setup()

void setup() {
  size(100, 100)
  colorMode(HSB, 360, 100, 100)
  bg = color(180, 50, 50)
}

void draw() {
  background(bg)	
}
