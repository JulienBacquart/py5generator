@@ meta
name = bezier_tangent()
category = Shape
subcategory = Curves
type = None
processing_name = bezierTangent

@@ description
Calculates the tangent of a point on a Bezier curve. There is a good definition of *tangent* on Wikipedia.

@@ example
image = Sketch_bezier_tangent_0.png

no_fill()
bezier(85, 20, 10, 10, 90, 90, 15, 80)
steps = 6
fill(255)
for i = range(0, steps + 1):
    t = i / float(steps)
    # get the location of the point
    x = bezier_point(85, 10, 90, 15, t)
    y = bezier_point(20, 10, 90, 80, t)
    # get the tangent points
    tx = bezier_tangent(85, 10, 90, 15, t)
    ty = bezier_tangent(20, 10, 90, 80, t)
    # calculate an angle from the tangent points
    a = atan2(ty, tx)
    a += PI
    stroke(255, 102, 0)
    line(x, y, cos(a)*30 + x, sin(a)*30 + y)
    # the following line of code makes a line
    # inverse of the above line
    #line(x, y, cos(a)*-30 + x, sin(a)*-30 + y)
    stroke(0)
    ellipse(x, y, 5, 5)


@@ example
image = Sketch_bezier_tangent_1.png

no_fill()
bezier(85, 20, 10, 10, 90, 90, 15, 80)
stroke(255, 102, 0)
steps = 16
for i = range(0, steps + 1):
    t = i / float(steps)
    x = bezier_point(85, 10, 90, 15, t)
    y = bezier_point(20, 10, 90, 80, t)
    tx = bezier_tangent(85, 10, 90, 15, t)
    ty = bezier_tangent(20, 10, 90, 80, t)
    a = atan2(ty, tx)
    a -= HALF_PI
    line(x, y, cos(a)*8 + x, sin(a)*8 + y)

