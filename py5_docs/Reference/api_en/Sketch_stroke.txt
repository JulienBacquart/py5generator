@@ meta
name = stroke()
category = color
subcategory = setting
type = method
pclass = PApplet
processing_name = stroke

@@ signatures
stroke(gray: float, /) -> None
stroke(gray: float, alpha: float, /) -> None
stroke(rgb: int, /) -> None
stroke(rgb: int, alpha: float, /) -> None
stroke(v1: float, v2: float, v3: float, /) -> None
stroke(v1: float, v2: float, v3: float, alpha: float, /) -> None

@@ variables
alpha: float - opacity of the stroke
gray: float - specifies a value between white and black
rgb: int - color value in hexadecimal notation
v1: float - red or hue value (depending on current color mode)
v2: float - green or saturation value (depending on current color mode)
v3: float - blue or brightness value (depending on current color mode)

@@ description
Sets the color used to draw lines and borders around shapes. This color is either specified in terms of the RGB or HSB color depending on the current :doc:`color_mode`. The default color space is RGB, with each value in the range from 0 to 255. 
 
When using hexadecimal notation to specify a color, use "``0x``" before the values (e.g., ``0xFFCCFFAA``). The hexadecimal value must be specified with eight characters; the first two characters define the alpha component, and the remainder define the red, green, and blue components.
 
The value for the gray parameter must be less than or equal to the current maximum value as specified by :doc:`color_mode`. The default maximum value is 255.
 
When drawing in 2D with the default renderer, you may need ``hint(ENABLE_STROKE_PURE)`` to improve drawing quality (at the expense of performance). See the :doc:`hint` documentation for more details.

@@ example
image = Sketch_stroke_0.png

def setup():
    py5.stroke(153)
    py5.rect(30, 20, 55, 55)

@@ example
image = Sketch_stroke_1.png

def setup():
    py5.stroke(204, 102, 0)
    py5.rect(30, 20, 55, 55)
