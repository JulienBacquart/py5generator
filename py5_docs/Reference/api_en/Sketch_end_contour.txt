@@ meta
name = end_contour()
category = shape
subcategory = vertex
type = method
pclass = PApplet
processing_name = endContour

@@ signatures
end_contour() -> None

@@ description
Use the [](sketch_begin_contour) and `end_contour()` methods to create negative shapes within shapes such as the center of the letter 'O'. The [](sketch_begin_contour) method begins recording vertices for the shape and `end_contour()` stops recording. The vertices that define a negative shape must "wind" in the opposite direction from the exterior shape. First draw vertices for the exterior shape in clockwise order, then for internal shapes, draw vertices counterclockwise.

These methods can only be used within a [](sketch_begin_shape) & [](sketch_end_shape) pair and transformations such as [](sketch_translate), [](sketch_rotate), and [](sketch_scale) do not work within a [](sketch_begin_contour) & `end_contour()` pair. It is also not possible to use other shapes, such as [](sketch_ellipse) or [](sketch_rect) within.

@@ example
image = Sketch_end_contour_0.png

def setup():
    py5.translate(50, 50)
    py5.stroke(255, 0, 0)
    py5.begin_shape()
    # exterior part of shape, clockwise winding
    py5.vertex(-40, -40)
    py5.vertex(40, -40)
    py5.vertex(40, 40)
    py5.vertex(-40, 40)
    # interior part of shape, counter-clockwise winding
    py5.begin_contour()
    py5.vertex(-20, -20)
    py5.vertex(-20, 20)
    py5.vertex(20, 20)
    py5.vertex(20, -20)
    py5.end_contour()
    py5.end_shape(py5.CLOSE)
