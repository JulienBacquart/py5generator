@@ meta
name = blue()
category = color
subcategory = creating_reading
type = method
pclass = PApplet
processing_name = blue

@@ signatures
blue(rgb: int, /) -> float

@@ variables
rgb: int - any value of the color datatype

@@ description
Extracts the blue value from a color, scaled to match current :doc:`color_mode`. The value is always returned as a float, so be careful not to assign it to an int value.

The ``blue()`` function is easy to use and understand, but it is slower than a technique called bit masking. When working in ``color_mode(RGB, 255)``, you can achieve the same results as ``blue()`` but with greater speed by using a bit mask to remove the other color components. For example, ``blue(c)`` and ``c & 0xFF`` both extract the blue value from a color variable ``c`` but the later is faster.

@@ example
image = Sketch_blue_0.png

def setup():
    c = py5.color(175, 100, 220)  # define color 'c'
    py5.fill(c)  # use color variable 'c' as fill color
    py5.rect(15, 20, 35, 60)  # draw left rectangle
    
    blue_value = py5.blue(c)  # get blue in 'c'
    print(blue_value)  # prints "220.0"
    py5.fill(0, 0, blue_value)  # use 'blue_value' in new fill
    py5.rect(50, 20, 35, 60)  # draw right rectangle
