@@ meta
name = curve_tangent()
category = shape
subcategory = curves
type = method
pclass = PApplet
processing_name = curveTangent

@@ signatures
curve_tangent(a: float, b: float, c: float, d: float, t: float, /) -> float

@@ variables
a: float - coordinate of first point on the curve
b: float - coordinate of first control point
c: float - coordinate of second control point
d: float - coordinate of second point on the curve
t: float - value between 0 and 1

@@ description
Calculates the tangent of a point on a curve. There's a good definition of *tangent* on Wikipedia.

@@ example
image = Sketch_curve_tangent_0.png

def setup():
    py5.no_fill()
    py5.curve(5, 26, 73, 24, 73, 61, 15, 65)
    steps = 6
    for i in range(0, steps + 1):
        t = i / float(steps)
        x = py5.curve_point(5, 73, 73, 15, t)
        y = py5.curve_point(26, 24, 61, 65, t)
        #ellipse(x, y, 5, 5)
        tx = py5.curve_tangent(5, 73, 73, 15, t)
        ty = py5.curve_tangent(26, 24, 61, 65, t)
        a = py5.atan2(ty, tx)
        a -= py5.PI/2.0
        py5.line(x, y, py5.cos(a)*8 + x, py5.sin(a)*8 + y)
