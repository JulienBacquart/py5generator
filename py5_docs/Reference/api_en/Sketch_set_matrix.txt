@@ meta
name = set_matrix()
type = method
pclass = PApplet
processing_name = setMatrix
category = transform
subcategory = None

@@ signatures
set_matrix(source: npt.NDArray[np.floating], /) -> None

@@ variables
source: npt.NDArray[np.floating] - transformation matrix with a shape of 2x3 for 2D transforms or 4x4 for 3D transforms

@@ description
Set the current matrix to the one specified through the parameter `source`. Inside the Processing code it will call [](sketch_reset_matrix) followed by [](sketch_apply_matrix). This will be very slow because [](sketch_apply_matrix) will try to calculate the inverse of the transform, so avoid it whenever possible.

@@ example
image = Sketch_set_matrix_0.png

import numpy as np


def setup():
    py5.size(100, 100, py5.P3D)
    py5.no_fill()
    matrix = np.array([[0.866025, 0, 0.5, 0],
                       [0, 1, 0, 0],
                       [-0.5, 0, 0.866025, -86.6025],
                       [0, 0, 0, 1]], dtype=np.float64)
    py5.set_matrix(matrix)
    py5.stroke(153)
    py5.box(50)
