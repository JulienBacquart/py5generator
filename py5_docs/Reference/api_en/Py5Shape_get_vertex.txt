@@ meta
name = get_vertex()
category = vertices
subcategory = None
type = method
pclass = PShape
processing_name = getVertex

@@ signatures
get_vertex(index: int, /) -> Py5Vector
get_vertex(index: int, vec: Py5Vector, /) -> Py5Vector

@@ variables
index: int - vertex index
vec: Py5Vector - target object to place vertex coordinates into

@@ description
The ``get_vertex()`` method returns a Py5Vector with the coordinates of the vertex point located at the position defined by the ``index`` parameter. This method works when shapes are created as shown in the example, but won't work properly when a shape is defined explicitly (e.g. ``create_shape(RECT, 20, 20, 80, 80)``.

@@ example
def setup():
    global s
    s = py5.create_shape()
    s.begin_shape()
    s.vertex(0, 0)
    s.vertex(60, 0)
    s.vertex(60, 60)
    s.vertex(0, 60)
    s.end_shape(py5.CLOSE)


def draw():
    py5.translate(20, 20)
    for i in range(0, s.get_vertex_count()):
        v = s.get_vertex(i)
        v.x += py5.random(-1, 1)
        v.y += py5.random(-1, 1)
        s.set_vertex(i, v)

    py5.shape(s)
