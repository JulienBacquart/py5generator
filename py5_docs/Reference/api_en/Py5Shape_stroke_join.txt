@@ meta
name = stroke_join()
type = method
pclass = PShape
processing_name = strokeJoin

@@ signatures
stroke_join(join: int, /) -> None

@@ variables
join: int - either MITER, BEVEL, ROUND

@@ description
Sets the style of the joints which connect line segments in a ``Py5Shape`` object. These joints are either mitered, beveled, or rounded and specified with the corresponding parameters ``MITER``, ``BEVEL``, and ``ROUND``. The default joint is ``MITER``.

This method can only be used within a :doc:`py5shape_begin_shape` and :doc:`py5shape_end_shape` pair.

@@ example
image = Py5Shape_stroke_join_0.png

def setup():
    s = py5.create_shape()
    s.begin_shape()
    s.no_fill()
    s.stroke_weight(10.0)
    s.stroke_join(py5.MITER)
    s.vertex(35, 20)
    s.vertex(65, 50)
    s.vertex(35, 80)
    s.end_shape()

    py5.shape(s)

@@ example
image = Py5Shape_stroke_join_1.png

def setup():
    s = py5.create_shape()
    s.begin_shape()
    s.no_fill()
    s.stroke_weight(10.0)
    s.stroke_join(py5.BEVEL)
    s.vertex(35, 20)
    s.vertex(65, 50)
    s.vertex(35, 80)
    s.end_shape()

    py5.shape(s)

@@ example
image = Py5Shape_stroke_join_2.png

def setup():
    s = py5.create_shape()
    s.begin_shape()
    s.no_fill()
    s.stroke_weight(10.0)
    s.stroke_join(py5.ROUND)
    s.vertex(35, 20)
    s.vertex(65, 50)
    s.vertex(35, 80)
    s.end_shape()

    py5.shape(s)
