@@ meta
name = red()
category = color
subcategory = creating_reading
type = method
pclass = PApplet
processing_name = red

@@ signatures
red(rgb: int, /) -> float

@@ variables
rgb: int - any value of the color datatype

@@ description
Extracts the red value from a color, scaled to match current ``color_mode()``. The value is always returned as a float, so be careful not to assign it to an int value.

The ``red()`` function is easy to use and understand, but it is slower than a technique called bit shifting. When working in ``color_mode(RGB, 255)``, you can acheive the same results as ``red()`` but with greater speed by using the right shift operator (``>>``) with a bit mask. For example, the following two lines of code are equivalent means of getting the red value of the color value ``c``:

``r1 = red(c)  # simpler, but slower to calculate
r2 = c >> 16 & 0xFF  # very fast to calculate``

@@ example
image = Sketch_red_0.png

c = py5.color(255, 204, 0)  # define color 'c'
py5.fill(c)  # use color variable 'c' as fill color
py5.rect(15, 20, 35, 60)  # draw left rectangle

red_value = py5.red(c)  # get red in 'c'
print(red_value)  # print "255.0"
py5.fill(red_value, 0, 0)  # use 'red_value' in new fill
py5.rect(50, 20, 35, 60)  # draw right rectangle
