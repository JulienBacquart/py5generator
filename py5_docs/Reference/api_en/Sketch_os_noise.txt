@@ meta
name = os_noise()
type = method
category = math
subcategory = random

@@ signatures
os_noise(x: float, y: float, /) -> float
os_noise(x: float, y: float, z: float, /) -> float
os_noise(x: float, y: float, z: float, w: float, /) -> float

@@ variables
w: float - w-coordinate in noise space
x: float - x-coordinate in noise space
y: float - y-coordinate in noise space
z: float - z-coordinate in noise space

@@ description
The documentation for this field or method has not yet been written. If you know what it does, please help out with a pull request to the relevant file in https://github.com/hx2A/py5generator/tree/master/py5_docs/Reference/api_en/.

@@ example
image = Sketch_os_noise_0.png

import numpy as np


def setup():
    py5.os_noise_seed(42)
    x, y = np.meshgrid(np.linspace(0, 5, py5.width), np.linspace(0, 5, py5.height))
    new_pixels = py5.remap(py5.os_noise(x, y), -1, 1, 0, 255).astype(np.uint8)
    py5.set_np_pixels(new_pixels, bands='L')

@@ example
import numpy as np


def setup():
    py5.size(200, 200)
    py5.os_noise_seed(42)
    global x, y
    x, y = np.meshgrid(
        np.linspace(
            0, 5, py5.width), np.linspace(
            0, 5, py5.height))


def draw():
    new_pixels = py5.remap(
        py5.os_noise(x, y + py5.frame_count / 10), -1, 1, 0, 255).astype(np.uint8)
    py5.set_np_pixels(new_pixels, bands='L')

@@ example
def setup():
    py5.os_noise_seed(42)
    py5.stroke(0, 10)


def draw():
    n = py5.remap(py5.os_noise(0.2, py5.frame_count / 100), -1, 1, 0, py5.width)
    py5.line(n, 0, n, py5.height)

@@ example
def setup():
    py5.rect_mode(py5.CENTER)
    py5.os_noise_seed(42)
    global xpos, ypos
    xpos = py5.width / 2
    ypos = py5.height / 2


def draw():
    py5.background(128)
    global xpos, ypos
    xpos = (xpos + py5.os_noise(0.2, py5.frame_count / 250)) % py5.width
    ypos = (ypos + py5.os_noise(5.8, py5.frame_count / 250)) % py5.height
    py5.square(xpos, ypos, 25)
