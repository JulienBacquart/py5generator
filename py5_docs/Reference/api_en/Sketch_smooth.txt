@@ meta
name = smooth()
category = environment
subcategory = None
type = method
pclass = PApplet
processing_name = smooth

@@ signatures
smooth() -> None
smooth(level: int, /) -> None

@@ variables
level: int - either 2, 3, 4, or 8 depending on the renderer

@@ description
Draws all geometry with smooth (anti-aliased) edges. This behavior is the default, so ``smooth()`` only needs to be used when a program needs to set the smoothing in a different way. The ``level`` parameter increases the amount of smoothness. This is the level of over sampling applied to the graphics buffer.

With the P2D and P3D renderers, ``smooth(2)`` is the default, this is called "2x anti-aliasing." The code ``smooth(4)`` is used for 4x anti-aliasing and ``smooth(8)`` is specified for "8x anti-aliasing." The maximum anti-aliasing level is determined by the hardware of the machine that is running the software, so ``smooth(4)`` and ``smooth(8)`` will not work with every computer.

The default renderer uses ``smooth(3)`` by default. This is bicubic smoothing. The other option for the default renderer is ``smooth(2)``, which is bilinear smoothing.

With Processing 3.0, ``smooth()`` is different than before. It was common to use ``smooth()`` and ``no_smooth()`` to turn on and off antialiasing within a sketch. Now, because of how the software has changed, ``smooth()`` can only be set once within a sketch. It can be used either at the top of a sketch without a ``setup()``, or after the ``size()`` function when used in a sketch with ``setup()``. The ``no_smooth()`` function also follows the same rules. 

When ``smooth()`` is used with a ``Py5Graphics`` object, it should be run right after the object is created with ``create_graphics()``, as shown in the Reference in the third example.

@@ example
def setup():
    py5.size(100, 100)
    py5.smooth(2)
    py5.no_stroke()


def draw():
    py5.background(0)
    py5.ellipse(30, 48, 36, 36)
    py5.ellipse(70, 48, 36, 36)

@@ example
x = 0


def setup():
    py5.full_screen(py5.P2D, py5.SPAN)
    py5.smooth(4)


def draw():
    py5.background(0)
    py5.ellipse(x, py5.height//2, py5.height/4, py5.height/4)
    x += 1

@@ example
x = 0


def setup():
    global pg
    py5.full_screen(py5.P2D)
    pg = py5.create_graphics(py5.width, py5.height, py5.P2D)
    pg.smooth(4)


def draw():
    pg.begin_draw()
    pg.background(0)
    pg.ellipse(x, py5.height//2, py5.height/4, py5.height/4)
    pg.end_draw()
    py5.image(pg, 0, 0)
    x += 1
