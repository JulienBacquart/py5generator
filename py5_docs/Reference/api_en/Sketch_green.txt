@@ meta
name = green()
category = color
subcategory = creating_reading
type = method
pclass = PApplet
processing_name = green

@@ signatures
green(rgb: int, /) -> float

@@ variables
rgb: int - any value of the color datatype

@@ description
Extracts the green value from a color, scaled to match current ``color_mode()``. The value is always returned as a float, so be careful not to assign it to an int value.

The ``green()`` function is easy to use and understand, but it is slower than a technique called bit shifting. When working in ``color_mode(RGB, 255)``, you can acheive the same results as ``green()`` but with greater speed by using the right shift operator (``>>``) with a bit mask. For example, the following two lines of code are equivalent means of getting the green value of the color value ``c``:

``g1 = green(c)  # simpler, but slower to calculate
g2 = c >> 8 & 0xFF  # very fast to calculate``

@@ example
image = Sketch_green_0.png

def setup():
    c = py5.color(20, 75, 200)  # define color 'c'
    py5.fill(c)  # use color variable 'c' as fill color
    py5.rect(15, 20, 35, 60)  # draw left rectangle
    
    green_value = py5.green(c)  # get green in 'c'
    print(green_value)  # print "75.0"
    py5.fill(0, green_value, 0)  # use 'green_value' in new fill
    py5.rect(50, 20, 35, 60)  # draw right rectangle
