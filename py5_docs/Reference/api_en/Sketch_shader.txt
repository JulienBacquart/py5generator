@@ meta
name = shader()
category = rendering
subcategory = shaders
type = method
pclass = PApplet
processing_name = shader

@@ signatures
shader(shader: Py5Shader, /) -> None
shader(shader: Py5Shader, kind: int, /) -> None

@@ variables
kind: int - type of shader, either POINTS, LINES, or TRIANGLES
shader: Py5Shader - name of shader file

@@ description
Applies the shader specified by the parameters. It's compatible with the ``P2D`` and ``P3D`` renderers, but not with the default renderer.

@@ example
def settings():
    py5.size(640, 360, py5.P2D)


def setup():
    global edges
    global img
    img = py5.load_image("leaves.jpg")
    edges = py5.load_shader("edges.glsl")


def draw():
    py5.shader(edges)
    py5.image(img, 0, 0)
