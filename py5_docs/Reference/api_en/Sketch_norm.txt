@@ meta
name = norm()
type = method
category = math
subcategory = calculation

@@ signatures
norm(value: Union[float, np.array], start: Union[float, np.array], stop: Union[float, np.array]) -> Union[float, np.array]

@@ variables
start: Union[float, np.array] - lower bound of the value's current range
stop: Union[float, np.array] - upper bound of the value's current range
value: Union[float, np.array] - the incoming value to be converted

@@ description
Normalizes a number from another range into a value between 0 and 1. Identical to ``remap(value, low, high, 0, 1)``.

Numbers outside of the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful. (See the second example.) If that isn't what you want, try pairing this function with :doc:`sketch_constrain`.

@@ example
def setup():
    value = 20
    n = py5.norm(value, 0, 50)
    py5.println(n)  # Prints "0.4"

@@ example
def setup():
    value = -10
    n = py5.norm(value, 0, 100)
    py5.println(n)  # Prints "-0.1"
