@@ meta
name = copy()
category = PImage
subcategory = Method
type = method
pclass = PImage
processing_name = copy

@@ signatures
copy() -> Py5Image
copy(src: Py5Image, sx: int, sy: int, sw: int, sh: int, dx: int, dy: int, dw: int, dh: int, /) -> None
copy(sx: int, sy: int, sw: int, sh: int, dx: int, dy: int, dw: int, dh: int, /) -> None

@@ variables
dh: int - destination image height
dw: int - destination image width
dx: int - X coordinate of the destination's upper left corner
dy: int - Y coordinate of the destination's upper left corner
sh: int - source image height
src: Py5Image - an image variable referring to the source image.
sw: int - source image width
sx: int - X coordinate of the source's upper left corner
sy: int - Y coordinate of the source's upper left corner

@@ description
Copies a region of pixels from one image into another. If the source and destination regions aren't the same size, it will automatically resize source pixels to fit the specified target region. No alpha information is used in the process, however if the source image has an alpha channel set, it will be copied as well.

As of release 0149, this function ignores ``image_mode()``.

@@ example
image = Py5Image_copy_0.png

def setup():
    global apples
    py5.size(100, 100)
    apples = py5.load_image("apples.jpg")
    x = py5.width//2
    apples.copy(x, 0, x, py5.height, 0, 0, x, py5.height)


def draw():
    py5.image(apples, 0, 0)
