@@ meta
name = vertex()
category = Shape
subcategory = Vertex
type = method
pclass = PApplet
processing_name = vertex

@@ description
All shapes are constructed by connecting a series of vertices. ``vertex()`` is used to specify the vertex coordinates for points, lines, triangles, quads, and polygons. It is used exclusively within the ``begin_shape()`` and ``end_shape()`` functions.

Drawing a vertex in 3D using the ``z`` parameter requires the P3D parameter in combination with size, as shown in the above example.

This function is also used to map a texture onto geometry. The ``texture()`` function declares the texture to apply to the geometry and the ``u`` and ``v`` coordinates set define the mapping of this texture to the form. By default, the coordinates used for ``u`` and ``v`` are specified in relation to the image's size in pixels, but this relation can be changed with ``texture_mode()``.

@@ example
image = Sketch_vertex_0.png

begin_shape(POINTS)
vertex(30, 20)
vertex(85, 20)
vertex(85, 75)
vertex(30, 75)
end_shape()


@@ example
image = Sketch_vertex_1.png

# drawing vertices in 3D requires P3D
# as a parameter to size()
size(100, 100, P3D)
begin_shape(POINTS)
vertex(30, 20, -50)
vertex(85, 20, -50)
vertex(85, 75, -50)
vertex(30, 75, -50)
end_shape()


@@ example
image = Sketch_vertex_2.png

size(100, 100, P3D)
img = load_image("laDefense.jpg")
no_stroke()
begin_shape()
texture(img)
# "laDefense.jpg" is 100x100 pixels in size so
# the values 0 and 100 are used for the
# parameters "u" and "v" to map it directly
# to the vertex points
vertex(10, 20, 0, 0)
vertex(80, 5, 100, 0)
vertex(95, 90, 100, 100)
vertex(40, 95, 0, 100)
end_shape()

