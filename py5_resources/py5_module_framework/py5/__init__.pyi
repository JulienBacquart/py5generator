from .py5math import *
from jnius import PythonJavaClass, autoclass as autoclass
from typing import Any, Dict


class Py5Methods(PythonJavaClass):
    __javainterfaces__: Any = ...
    def __init__(self) -> None: ...
    def set_functions(self, **kwargs: Any) -> None: ...
    def set_py5applet(self, _py5applet: Any) -> None: ...
    def get_function_list(self): ...
    def run_method(self, method_name: Any, params: Any) -> None: ...


class Sketch:
    def __init__(self) -> None: ...
    def run_sketch(self, block: bool = ...) -> None: ...
    def exit_sketch(self) -> None: ...
    def get_py5applet(self) -> _Py5Applet: ...
    ADD: int = ...
    ALPHA: int = ...
    ALT: int = ...
    AMBIENT: int = ...
    ARC: int = ...
    ARGB: int = ...
    ARGS_BGCOLOR: str = ...
    ARGS_DENSITY: str = ...
    ARGS_DISABLE_AWT: str = ...
    ARGS_DISPLAY: str = ...
    ARGS_EDITOR_LOCATION: str = ...
    ARGS_EXTERNAL: str = ...
    ARGS_FULL_SCREEN: str = ...
    ARGS_HIDE_STOP: str = ...
    ARGS_LOCATION: str = ...
    ARGS_PRESENT: str = ...
    ARGS_SKETCH_FOLDER: str = ...
    ARGS_STOP_COLOR: str = ...
    ARGS_WINDOW_COLOR: str = ...
    ARROW: int = ...
    BASELINE: int = ...
    BEVEL: int = ...
    BEZIER_VERTEX: int = ...
    BLEND: int = ...
    BLUR: int = ...
    BOTTOM: int = ...
    BOX: int = ...
    BREAK: int = ...
    BURN: int = ...
    CENTER: int = ...
    CHATTER: int = ...
    CHORD: int = ...
    CLAMP: int = ...
    CLOSE: int = ...
    CODED: str = ...
    COMPLAINT: int = ...
    CONTROL: int = ...
    CORNER: int = ...
    CORNERS: int = ...
    CROSS: int = ...
    CURVE_VERTEX: int = ...
    CUSTOM: int = ...
    DARKEST: int = ...
    DEFAULT_HEIGHT: int = ...
    DEFAULT_WIDTH: int = ...
    DEG_TO_RAD: float = ...
    DIAMETER: int = ...
    DIFFERENCE: int = ...
    DILATE: int = ...
    DIRECTIONAL: int = ...
    DISABLE_ASYNC_SAVEFRAME: int = ...
    DISABLE_BUFFER_READING: int = ...
    DISABLE_DEPTH_MASK: int = ...
    DISABLE_DEPTH_SORT: int = ...
    DISABLE_DEPTH_TEST: int = ...
    DISABLE_KEY_REPEAT: int = ...
    DISABLE_NATIVE_FONTS: int = ...
    DISABLE_OPENGL_ERRORS: int = ...
    DISABLE_OPTIMIZED_STROKE: int = ...
    DISABLE_STROKE_PERSPECTIVE: int = ...
    DISABLE_STROKE_PURE: int = ...
    DISABLE_TEXTURE_MIPMAPS: int = ...
    DODGE: int = ...
    DOWN: int = ...
    DXF: str = ...
    ELLIPSE: int = ...
    ENABLE_ASYNC_SAVEFRAME: int = ...
    ENABLE_BUFFER_READING: int = ...
    ENABLE_DEPTH_MASK: int = ...
    ENABLE_DEPTH_SORT: int = ...
    ENABLE_DEPTH_TEST: int = ...
    ENABLE_KEY_REPEAT: int = ...
    ENABLE_NATIVE_FONTS: int = ...
    ENABLE_OPENGL_ERRORS: int = ...
    ENABLE_OPTIMIZED_STROKE: int = ...
    ENABLE_STROKE_PERSPECTIVE: int = ...
    ENABLE_STROKE_PURE: int = ...
    ENABLE_TEXTURE_MIPMAPS: int = ...
    EPSILON: float = ...
    ERODE: int = ...
    EXCLUSION: int = ...
    EXTERNAL_MOVE: str = ...
    EXTERNAL_STOP: str = ...
    FX2D: str = ...
    GIF: int = ...
    GRAY: int = ...
    GROUP: int = ...
    HALF_PI: float = ...
    HAND: int = ...
    HARD_LIGHT: int = ...
    HINT_COUNT: int = ...
    HSB: int = ...
    IMAGE: int = ...
    INVERT: int = ...
    JAVA2D: str = ...
    JPEG: int = ...
    LANDSCAPE: int = ...
    LEFT: int = ...
    LIGHTEST: int = ...
    LINE: int = ...
    LINES: int = ...
    LINE_LOOP: int = ...
    LINE_STRIP: int = ...
    LINUX: int = ...
    MACOS: int = ...
    MAX_FLOAT: float = ...
    MAX_INT: int = ...
    MIN_FLOAT: Any = ...
    MIN_INT: int = ...
    MITER: int = ...
    MODEL: int = ...
    MODELVIEW: int = ...
    MOVE: int = ...
    MULTIPLY: int = ...
    NORMAL: int = ...
    OPAQUE: int = ...
    OPEN: int = ...
    OPENGL: str = ...
    ORTHOGRAPHIC: int = ...
    OTHER: int = ...
    OVERLAY: int = ...
    P2D: str = ...
    P3D: str = ...
    PATH: int = ...
    PDF: str = ...
    PERSPECTIVE: int = ...
    PI: float = ...
    PIE: int = ...
    POINT: int = ...
    POINTS: int = ...
    POLYGON: int = ...
    PORTRAIT: int = ...
    POSTERIZE: int = ...
    PROBLEM: int = ...
    PROJECT: int = ...
    PROJECTION: int = ...
    QUAD: int = ...
    QUADRATIC_VERTEX: int = ...
    QUADS: int = ...
    QUAD_BEZIER_VERTEX: int = ...
    QUAD_STRIP: int = ...
    QUARTER_PI: float = ...
    RADIUS: int = ...
    RAD_TO_DEG: float = ...
    RECT: int = ...
    REPEAT: int = ...
    REPLACE: int = ...
    RGB: int = ...
    RIGHT: int = ...
    ROUND: int = ...
    SCREEN: int = ...
    SHAPE: int = ...
    SHIFT: int = ...
    SOFT_LIGHT: int = ...
    SPAN: int = ...
    SPHERE: int = ...
    SPOT: int = ...
    SQUARE: int = ...
    SUBTRACT: int = ...
    SVG: str = ...
    TARGA: int = ...
    TAU: float = ...
    TEXT: int = ...
    THIRD_PI: float = ...
    THRESHOLD: int = ...
    TIFF: int = ...
    TOP: int = ...
    TRIANGLE: int = ...
    TRIANGLES: int = ...
    TRIANGLE_FAN: int = ...
    TRIANGLE_STRIP: int = ...
    TWO_PI: float = ...
    UP: int = ...
    VERTEX: int = ...
    WAIT: int = ...
    WINDOWS: int = ...
    X: int = ...
    Y: int = ...
    Z: int = ...
    javaPlatform: int = ...
    javaVersion: float = ...
    javaVersionName: str = ...
    platform: int = ...
    platformNames: Any = ...
    useNativeSelect: bool = ...
    @property
    def args(self): ...
    @property
    def display_height(self): ...
    @property
    def display_width(self): ...
    @property
    def finished(self): ...
    @property
    def focused(self): ...
    @property
    def frame_count(self): ...
    @property
    def g(self): ...
    @property
    def height(self): ...
    @property
    def key(self): ...
    @property
    def key_code(self): ...
    @property
    def mouse_button(self): ...
    @property
    def mouse_x(self): ...
    @property
    def mouse_y(self): ...
    @property
    def pixel_height(self): ...
    @property
    def pixel_width(self): ...
    @property
    def pixels(self): ...
    @property
    def pmouse_x(self): ...
    @property
    def pmouse_y(self): ...
    @property
    def recorder(self): ...
    @property
    def width(self): ...
    def alpha(self, *args: Any): ...
    def ambient(self, *args: Any): ...
    def ambient_light(self, *args: Any): ...
    def apply_matrix(self, *args: Any): ...
    def arc(self, *args: Any): ...
    def attrib(self, *args: Any): ...
    def attrib_color(self, *args: Any): ...
    def attrib_normal(self, *args: Any): ...
    def attrib_position(self, *args: Any): ...
    def background(self, *args: Any): ...
    def begin_camera(self, *args: Any): ...
    def begin_contour(self, *args: Any): ...
    def begin_pgl(self, *args: Any): ...
    def begin_raw(self, *args: Any): ...
    def begin_record(self, *args: Any): ...
    def begin_shape(self, *args: Any): ...
    def bezier(self, *args: Any): ...
    def bezier_detail(self, *args: Any): ...
    def bezier_point(self, *args: Any): ...
    def bezier_tangent(self, *args: Any): ...
    def bezier_vertex(self, *args: Any): ...
    def blend(self, *args: Any): ...
    def blend_mode(self, *args: Any): ...
    def blue(self, *args: Any): ...
    def box(self, *args: Any): ...
    def brightness(self, *args: Any): ...
    def camera(self, *args: Any): ...
    def circle(self, *args: Any): ...
    def clear(self, *args: Any): ...
    def clip(self, *args: Any): ...
    def color(self, *args: Any): ...
    def color_mode(self, *args: Any): ...
    def copy(self, *args: Any): ...
    def create_font(self, *args: Any): ...
    def create_graphics(self, *args: Any): ...
    def create_image(self, *args: Any): ...
    def create_input(self, *args: Any): ...
    def create_input_raw(self, *args: Any): ...
    def create_output(self, *args: Any): ...
    def create_path(self, *args: Any): ...
    def create_reader(self, *args: Any): ...
    def create_shape(self, *args: Any): ...
    def create_writer(self, *args: Any): ...
    def cursor(self, *args: Any): ...
    def curve(self, *args: Any): ...
    def curve_detail(self, *args: Any): ...
    def curve_point(self, *args: Any): ...
    def curve_tangent(self, *args: Any): ...
    def curve_tightness(self, *args: Any): ...
    def curve_vertex(self, *args: Any): ...
    def data_file(self, *args: Any): ...
    def data_path(self, *args: Any): ...
    def die(self, *args: Any): ...
    def directional_light(self, *args: Any): ...
    def display_density(self, *args: Any): ...
    def dispose(self, *args: Any): ...
    def dist(self, *args: Any): ...
    def edge(self, *args: Any): ...
    def ellipse(self, *args: Any): ...
    def ellipse_mode(self, *args: Any): ...
    def emissive(self, *args: Any): ...
    def end_camera(self, *args: Any): ...
    def end_contour(self, *args: Any): ...
    def end_pgl(self, *args: Any): ...
    def end_raw(self, *args: Any): ...
    def end_record(self, *args: Any): ...
    def end_shape(self, *args: Any): ...
    def exit_called(self, *args: Any): ...
    def fill(self, *args: Any): ...
    def filter(self, *args: Any): ...
    def flush(self, *args: Any): ...
    def focus_gained(self, *args: Any): ...
    def focus_lost(self, *args: Any): ...
    def frame_moved(self, *args: Any): ...
    def frame_rate(self, *args: Any): ...
    def frame_resized(self, *args: Any): ...
    def frustum(self, *args: Any): ...
    def full_screen(self, *args: Any): ...
    def get(self, *args: Any): ...
    def get_frame_rate(self, *args: Any): ...
    def get_graphics(self, *args: Any): ...
    def get_matrix(self, *args: Any): ...
    def get_surface(self, *args: Any): ...
    def green(self, *args: Any): ...
    def hash_code(self, *args: Any): ...
    def hint(self, *args: Any): ...
    def hue(self, *args: Any): ...
    def image(self, *args: Any): ...
    def image_mode(self, *args: Any): ...
    def insert_frame(self, *args: Any): ...
    def is_key_pressed(self, *args: Any): ...
    def is_looping(self, *args: Any): ...
    def lerp_color(self, *args: Any): ...
    def light_falloff(self, *args: Any): ...
    def light_specular(self, *args: Any): ...
    def lights(self, *args: Any): ...
    def line(self, *args: Any): ...
    def link(self, *args: Any): ...
    def list_files(self, *args: Any): ...
    def list_paths(self, *args: Any): ...
    def load_bytes(self, *args: Any): ...
    def load_font(self, *args: Any): ...
    def load_image(self, *args: Any): ...
    def load_json_array(self, *args: Any): ...
    def load_json_object(self, *args: Any): ...
    def load_pixels(self, *args: Any): ...
    def load_shader(self, *args: Any): ...
    def load_shape(self, *args: Any): ...
    def load_strings(self, *args: Any): ...
    def load_table(self, *args: Any): ...
    def load_xml(self, *args: Any): ...
    def loop(self, *args: Any): ...
    def mag(self, *args: Any): ...
    def mask(self, *args: Any): ...
    def method(self, *args: Any): ...
    def millis(self, *args: Any): ...
    def model_x(self, *args: Any): ...
    def model_y(self, *args: Any): ...
    def model_z(self, *args: Any): ...
    def no_clip(self, *args: Any): ...
    def no_cursor(self, *args: Any): ...
    def no_fill(self, *args: Any): ...
    def no_lights(self, *args: Any): ...
    def no_loop(self, *args: Any): ...
    def no_smooth(self, *args: Any): ...
    def no_stroke(self, *args: Any): ...
    def no_texture(self, *args: Any): ...
    def no_tint(self, *args: Any): ...
    def noise(self, *args: Any): ...
    def noise_detail(self, *args: Any): ...
    def noise_seed(self, *args: Any): ...
    def normal(self, *args: Any): ...
    def notify(self, *args: Any): ...
    def notify_all(self, *args: Any): ...
    def orientation(self, *args: Any): ...
    def ortho(self, *args: Any): ...
    def parse_boolean(self, *args: Any): ...
    def parse_byte(self, *args: Any): ...
    def parse_char(self, *args: Any): ...
    def parse_float(self, *args: Any): ...
    def parse_int(self, *args: Any): ...
    def parse_json_array(self, *args: Any): ...
    def parse_json_object(self, *args: Any): ...
    def parse_xml(self, *args: Any): ...
    def pause(self, *args: Any): ...
    def perspective(self, *args: Any): ...
    def pixel_density(self, *args: Any): ...
    def point(self, *args: Any): ...
    def point_light(self, *args: Any): ...
    def pop(self, *args: Any): ...
    def pop_matrix(self, *args: Any): ...
    def pop_style(self, *args: Any): ...
    def post_event(self, *args: Any): ...
    def print_camera(self, *args: Any): ...
    def print_matrix(self, *args: Any): ...
    def print_projection(self, *args: Any): ...
    def println(self, *args: Any): ...
    def push(self, *args: Any): ...
    def push_matrix(self, *args: Any): ...
    def push_style(self, *args: Any): ...
    def quad(self, *args: Any): ...
    def quadratic_vertex(self, *args: Any): ...
    def random(self, *args: Any): ...
    def random_gaussian(self, *args: Any): ...
    def random_seed(self, *args: Any): ...
    def rect(self, *args: Any): ...
    def rect_mode(self, *args: Any): ...
    def red(self, *args: Any): ...
    def redraw(self, *args: Any): ...
    def request_image(self, *args: Any): ...
    def reset_matrix(self, *args: Any): ...
    def reset_shader(self, *args: Any): ...
    def resume(self, *args: Any): ...
    def rotate(self, *args: Any): ...
    def rotate_x(self, *args: Any): ...
    def rotate_y(self, *args: Any): ...
    def rotate_z(self, *args: Any): ...
    def saturation(self, *args: Any): ...
    def save(self, *args: Any): ...
    def save_bytes(self, *args: Any): ...
    def save_file(self, *args: Any): ...
    def save_frame(self, *args: Any): ...
    def save_json_array(self, *args: Any): ...
    def save_json_object(self, *args: Any): ...
    def save_path(self, *args: Any): ...
    def save_stream(self, *args: Any): ...
    def save_strings(self, *args: Any): ...
    def save_table(self, *args: Any): ...
    def save_xml(self, *args: Any): ...
    def scale(self, *args: Any): ...
    def screen_x(self, *args: Any): ...
    def screen_y(self, *args: Any): ...
    def screen_z(self, *args: Any): ...
    def select_folder(self, *args: Any): ...
    def select_input(self, *args: Any): ...
    def select_output(self, *args: Any): ...
    def set_matrix(self, *args: Any): ...
    def shader(self, *args: Any): ...
    def shape(self, *args: Any): ...
    def shape_mode(self, *args: Any): ...
    def shear_x(self, *args: Any): ...
    def shear_y(self, *args: Any): ...
    def shininess(self, *args: Any): ...
    def size(self, *args: Any): ...
    def sketch_display(self, *args: Any): ...
    def sketch_file(self, *args: Any): ...
    def sketch_full_screen(self, *args: Any): ...
    def sketch_height(self, *args: Any): ...
    def sketch_output_path(self, *args: Any): ...
    def sketch_output_stream(self, *args: Any): ...
    def sketch_path(self, *args: Any): ...
    def sketch_pixel_density(self, *args: Any): ...
    def sketch_renderer(self, *args: Any): ...
    def sketch_smooth(self, *args: Any): ...
    def sketch_width(self, *args: Any): ...
    def sketch_window_color(self, *args: Any): ...
    def smooth(self, *args: Any): ...
    def specular(self, *args: Any): ...
    def sphere(self, *args: Any): ...
    def sphere_detail(self, *args: Any): ...
    def spot_light(self, *args: Any): ...
    def square(self, *args: Any): ...
    def start(self, *args: Any): ...
    def stop(self, *args: Any): ...
    def stroke(self, *args: Any): ...
    def stroke_cap(self, *args: Any): ...
    def stroke_join(self, *args: Any): ...
    def stroke_weight(self, *args: Any): ...
    def style(self, *args: Any): ...
    def text(self, *args: Any): ...
    def text_align(self, *args: Any): ...
    def text_ascent(self, *args: Any): ...
    def text_descent(self, *args: Any): ...
    def text_font(self, *args: Any): ...
    def text_leading(self, *args: Any): ...
    def text_mode(self, *args: Any): ...
    def text_size(self, *args: Any): ...
    def text_width(self, *args: Any): ...
    def texture(self, *args: Any): ...
    def texture_mode(self, *args: Any): ...
    def texture_wrap(self, *args: Any): ...
    def thread(self, *args: Any): ...
    def tint(self, *args: Any): ...
    def to_string(self, *args: Any): ...
    def translate(self, *args: Any): ...
    def triangle(self, *args: Any): ...
    def update_pixels(self, *args: Any): ...
    def vertex(self, *args: Any): ...
    def wait(self, *args: Any): ...
    @classmethod
    def blend_color(cls, *args: Any): ...
    @classmethod
    def check_extension(cls, *args: Any): ...
    @classmethod
    def day(cls, *args: Any): ...
    @classmethod
    def desktop_file(cls, *args: Any): ...
    @classmethod
    def desktop_path(cls, *args: Any): ...
    @classmethod
    def get_extension(cls, *args: Any): ...
    @classmethod
    def hide_menu_bar(cls, *args: Any): ...
    @classmethod
    def hour(cls, *args: Any): ...
    @classmethod
    def launch(cls, *args: Any): ...
    @classmethod
    def minute(cls, *args: Any): ...
    @classmethod
    def month(cls, *args: Any): ...
    @classmethod
    def norm(cls, *args: Any): ...
    @classmethod
    def print_array(cls, *args: Any): ...
    @classmethod
    def save_via_image_io(cls, *args: Any): ...
    @classmethod
    def second(cls, *args: Any): ...
    @classmethod
    def select_callback(cls, *args: Any): ...
    @classmethod
    def shell(cls, *args: Any): ...
    @classmethod
    def url_decode(cls, *args: Any): ...
    @classmethod
    def url_encode(cls, *args: Any): ...
    @classmethod
    def year(cls, *args: Any): ...


ADD: int
ALPHA: int
ALT: int
AMBIENT: int
ARC: int
ARGB: int
ARGS_BGCOLOR: str
ARGS_DENSITY: str
ARGS_DISABLE_AWT: str
ARGS_DISPLAY: str
ARGS_EDITOR_LOCATION: str
ARGS_EXTERNAL: str
ARGS_FULL_SCREEN: str
ARGS_HIDE_STOP: str
ARGS_LOCATION: str
ARGS_PRESENT: str
ARGS_SKETCH_FOLDER: str
ARGS_STOP_COLOR: str
ARGS_WINDOW_COLOR: str
ARROW: int
BASELINE: int
BEVEL: int
BEZIER_VERTEX: int
BLEND: int
BLUR: int
BOTTOM: int
BOX: int
BREAK: int
BURN: int
CENTER: int
CHATTER: int
CHORD: int
CLAMP: int
CLOSE: int
CODED: str
COMPLAINT: int
CONTROL: int
CORNER: int
CORNERS: int
CROSS: int
CURVE_VERTEX: int
CUSTOM: int
DARKEST: int
DEFAULT_HEIGHT: int
DEFAULT_WIDTH: int
DEG_TO_RAD: float
DIAMETER: int
DIFFERENCE: int
DILATE: int
DIRECTIONAL: int
DISABLE_ASYNC_SAVEFRAME: int
DISABLE_BUFFER_READING: int
DISABLE_DEPTH_MASK: int
DISABLE_DEPTH_SORT: int
DISABLE_DEPTH_TEST: int
DISABLE_KEY_REPEAT: int
DISABLE_NATIVE_FONTS: int
DISABLE_OPENGL_ERRORS: int
DISABLE_OPTIMIZED_STROKE: int
DISABLE_STROKE_PERSPECTIVE: int
DISABLE_STROKE_PURE: int
DISABLE_TEXTURE_MIPMAPS: int
DODGE: int
DOWN: int
DXF: str
ELLIPSE: int
ENABLE_ASYNC_SAVEFRAME: int
ENABLE_BUFFER_READING: int
ENABLE_DEPTH_MASK: int
ENABLE_DEPTH_SORT: int
ENABLE_DEPTH_TEST: int
ENABLE_KEY_REPEAT: int
ENABLE_NATIVE_FONTS: int
ENABLE_OPENGL_ERRORS: int
ENABLE_OPTIMIZED_STROKE: int
ENABLE_STROKE_PERSPECTIVE: int
ENABLE_STROKE_PURE: int
ENABLE_TEXTURE_MIPMAPS: int
EPSILON: float
ERODE: int
EXCLUSION: int
EXTERNAL_MOVE: str
EXTERNAL_STOP: str
FX2D: str
GIF: int
GRAY: int
GROUP: int
HALF_PI: float
HAND: int
HARD_LIGHT: int
HINT_COUNT: int
HSB: int
IMAGE: int
INVERT: int
JAVA2D: str
JPEG: int
LANDSCAPE: int
LEFT: int
LIGHTEST: int
LINE: int
LINES: int
LINE_LOOP: int
LINE_STRIP: int
LINUX: int
MACOS: int
MAX_FLOAT: float
MAX_INT: int
MIN_FLOAT: Any
MIN_INT: int
MITER: int
MODEL: int
MODELVIEW: int
MOVE: int
MULTIPLY: int
NORMAL: int
OPAQUE: int
OPEN: int
OPENGL: str
ORTHOGRAPHIC: int
OTHER: int
OVERLAY: int
P2D: str
P3D: str
PATH: int
PDF: str
PERSPECTIVE: int
PI: float
PIE: int
POINT: int
POINTS: int
POLYGON: int
PORTRAIT: int
POSTERIZE: int
PROBLEM: int
PROJECT: int
PROJECTION: int
QUAD: int
QUADRATIC_VERTEX: int
QUADS: int
QUAD_BEZIER_VERTEX: int
QUAD_STRIP: int
QUARTER_PI: float
RADIUS: int
RAD_TO_DEG: float
RECT: int
REPEAT: int
REPLACE: int
RGB: int
RIGHT: int
ROUND: int
SCREEN: int
SHAPE: int
SHIFT: int
SOFT_LIGHT: int
SPAN: int
SPHERE: int
SPOT: int
SQUARE: int
SUBTRACT: int
SVG: str
TARGA: int
TAU: float
TEXT: int
THIRD_PI: float
THRESHOLD: int
TIFF: int
TOP: int
TRIANGLE: int
TRIANGLES: int
TRIANGLE_FAN: int
TRIANGLE_STRIP: int
TWO_PI: float
UP: int
VERTEX: int
WAIT: int
WINDOWS: int
X: int
Y: int
Z: int
javaPlatform: int
javaVersion: float
javaVersionName: str
platform: int
platformNames: Any
useNativeSelect: int


def run_sketch(local_dict: Dict[str, Any], block: bool = ...) -> None: ...


def exit_sketch() -> None: ...


def get_py5applet() -> _Py5Applet: ...


def reset_py5() -> None: ...


def background(*args: Any): ...


# Names in __all__ with no definition:
#   _Py5Applet
#   _py5sketch
#   _py5sketch_used
#   alpha
#   ambient
#   ambient_light
#   apply_matrix
#   arc
#   attrib
#   attrib_color
#   attrib_normal
#   attrib_position
#   background
#   begin_camera
#   begin_contour
#   begin_pgl
#   begin_raw
#   begin_record
#   begin_shape
#   bezier
#   bezier_detail
#   bezier_point
#   bezier_tangent
#   bezier_vertex
#   blend
#   blend_color
#   blend_mode
#   blue
#   box
#   brightness
#   camera
#   check_extension
#   circle
#   clear
#   clip
#   color
#   color_mode
#   copy
#   create_font
#   create_graphics
#   create_image
#   create_input
#   create_input_raw
#   create_output
#   create_path
#   create_reader
#   create_shape
#   create_writer
#   cursor
#   curve
#   curve_detail
#   curve_point
#   curve_tangent
#   curve_tightness
#   curve_vertex
#   data_file
#   data_path
#   day
#   desktop_file
#   desktop_path
#   die
#   directional_light
#   display_density
#   dispose
#   dist
#   edge
#   ellipse
#   ellipse_mode
#   emissive
#   end_camera
#   end_contour
#   end_pgl
#   end_raw
#   end_record
#   end_shape
#   exit_called
#   fill
#   filter
#   flush
#   focus_gained
#   focus_lost
#   frame_moved
#   frame_rate
#   frame_resized
#   frustum
#   full_screen
#   get
#   get_extension
#   get_frame_rate
#   get_graphics
#   get_matrix
#   get_surface
#   green
#   hash_code
#   hide_menu_bar
#   hint
#   hour
#   hue
#   image
#   image_mode
#   insert_frame
#   is_key_pressed
#   is_looping
#   launch
#   lerp_color
#   light_falloff
#   light_specular
#   lights
#   line
#   link
#   list_files
#   list_paths
#   load_bytes
#   load_font
#   load_image
#   load_json_array
#   load_json_object
#   load_pixels
#   load_shader
#   load_shape
#   load_strings
#   load_table
#   load_xml
#   loop
#   mag
#   mask
#   method
#   millis
#   minute
#   model_x
#   model_y
#   model_z
#   month
#   no_clip
#   no_cursor
#   no_fill
#   no_lights
#   no_loop
#   no_smooth
#   no_stroke
#   no_texture
#   no_tint
#   noise
#   noise_detail
#   noise_seed
#   norm
#   normal
#   notify
#   notify_all
#   orientation
#   ortho
#   parse_boolean
#   parse_byte
#   parse_char
#   parse_float
#   parse_int
#   parse_json_array
#   parse_json_object
#   parse_xml
#   pause
#   perspective
#   pixel_density
#   point
#   point_light
#   pop
#   pop_matrix
#   pop_style
#   post_event
#   print_array
#   print_camera
#   print_matrix
#   print_projection
#   println
#   push
#   push_matrix
#   push_style
#   quad
#   quadratic_vertex
#   random
#   random_gaussian
#   random_seed
#   rect
#   rect_mode
#   red
#   redraw
#   request_image
#   reset_matrix
#   reset_shader
#   resume
#   rotate
#   rotate_x
#   rotate_y
#   rotate_z
#   saturation
#   save
#   save_bytes
#   save_file
#   save_frame
#   save_json_array
#   save_json_object
#   save_path
#   save_stream
#   save_strings
#   save_table
#   save_via_image_io
#   save_xml
#   scale
#   screen_x
#   screen_y
#   screen_z
#   second
#   select_callback
#   select_folder
#   select_input
#   select_output
#   set_matrix
#   shader
#   shape
#   shape_mode
#   shear_x
#   shear_y
#   shell
#   shininess
#   size
#   sketch_display
#   sketch_file
#   sketch_full_screen
#   sketch_height
#   sketch_output_path
#   sketch_output_stream
#   sketch_path
#   sketch_pixel_density
#   sketch_renderer
#   sketch_smooth
#   sketch_width
#   sketch_window_color
#   smooth
#   specular
#   sphere
#   sphere_detail
#   spot_light
#   square
#   start
#   stop
#   stroke
#   stroke_cap
#   stroke_join
#   stroke_weight
#   style
#   text
#   text_align
#   text_ascent
#   text_descent
#   text_font
#   text_leading
#   text_mode
#   text_size
#   text_width
#   texture
#   texture_mode
#   texture_wrap
#   thread
#   tint
#   to_string
#   translate
#   triangle
#   update_pixels
#   url_decode
#   url_encode
#   vertex
#   wait
#   year
